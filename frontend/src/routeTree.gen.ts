/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as HomeLayoutImport } from './routes/_homeLayout'
import { Route as AuthImport } from './routes/_auth'
import { Route as HomeLayoutIndexImport } from './routes/_homeLayout/index'
import { Route as ProfileUsernameImport } from './routes/profile.$username'
import { Route as ArticlesSlugImport } from './routes/articles.$slug'
import { Route as AuthSettingsImport } from './routes/_auth/settings'
import { Route as ProfileUsernameFavoritesImport } from './routes/profile.$username.favorites'
import { Route as HomeLayoutTagFeedTagImport } from './routes/_homeLayout/tag-feed.$tag'
import { Route as HomeLayoutAuthYourFeedImport } from './routes/_homeLayout._auth.your-feed'
import { Route as AuthArticlesCreateImport } from './routes/_auth/articles.create'
import { Route as AuthArticlesSlugEditImport } from './routes/_auth/articles.$slug.edit'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HomeLayoutRoute = HomeLayoutImport.update({
  id: '/_homeLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const HomeLayoutIndexRoute = HomeLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeLayoutRoute,
} as any)

const ProfileUsernameRoute = ProfileUsernameImport.update({
  id: '/profile/$username',
  path: '/profile/$username',
  getParentRoute: () => rootRoute,
} as any)

const ArticlesSlugRoute = ArticlesSlugImport.update({
  id: '/articles/$slug',
  path: '/articles/$slug',
  getParentRoute: () => rootRoute,
} as any)

const AuthSettingsRoute = AuthSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)

const ProfileUsernameFavoritesRoute = ProfileUsernameFavoritesImport.update({
  id: '/favorites',
  path: '/favorites',
  getParentRoute: () => ProfileUsernameRoute,
} as any)

const HomeLayoutTagFeedTagRoute = HomeLayoutTagFeedTagImport.update({
  id: '/tag-feed/$tag',
  path: '/tag-feed/$tag',
  getParentRoute: () => HomeLayoutRoute,
} as any)

const HomeLayoutAuthYourFeedRoute = HomeLayoutAuthYourFeedImport.update({
  id: '/_auth/your-feed',
  path: '/your-feed',
  getParentRoute: () => HomeLayoutRoute,
} as any)

const AuthArticlesCreateRoute = AuthArticlesCreateImport.update({
  id: '/articles/create',
  path: '/articles/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthArticlesSlugEditRoute = AuthArticlesSlugEditImport.update({
  id: '/articles/$slug/edit',
  path: '/articles/$slug/edit',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_homeLayout': {
      id: '/_homeLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeLayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsImport
      parentRoute: typeof AuthImport
    }
    '/articles/$slug': {
      id: '/articles/$slug'
      path: '/articles/$slug'
      fullPath: '/articles/$slug'
      preLoaderRoute: typeof ArticlesSlugImport
      parentRoute: typeof rootRoute
    }
    '/profile/$username': {
      id: '/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProfileUsernameImport
      parentRoute: typeof rootRoute
    }
    '/_homeLayout/': {
      id: '/_homeLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeLayoutIndexImport
      parentRoute: typeof HomeLayoutImport
    }
    '/_auth/articles/create': {
      id: '/_auth/articles/create'
      path: '/articles/create'
      fullPath: '/articles/create'
      preLoaderRoute: typeof AuthArticlesCreateImport
      parentRoute: typeof AuthImport
    }
    '/_homeLayout/_auth/your-feed': {
      id: '/_homeLayout/_auth/your-feed'
      path: '/your-feed'
      fullPath: '/your-feed'
      preLoaderRoute: typeof HomeLayoutAuthYourFeedImport
      parentRoute: typeof HomeLayoutImport
    }
    '/_homeLayout/tag-feed/$tag': {
      id: '/_homeLayout/tag-feed/$tag'
      path: '/tag-feed/$tag'
      fullPath: '/tag-feed/$tag'
      preLoaderRoute: typeof HomeLayoutTagFeedTagImport
      parentRoute: typeof HomeLayoutImport
    }
    '/profile/$username/favorites': {
      id: '/profile/$username/favorites'
      path: '/favorites'
      fullPath: '/profile/$username/favorites'
      preLoaderRoute: typeof ProfileUsernameFavoritesImport
      parentRoute: typeof ProfileUsernameImport
    }
    '/_auth/articles/$slug/edit': {
      id: '/_auth/articles/$slug/edit'
      path: '/articles/$slug/edit'
      fullPath: '/articles/$slug/edit'
      preLoaderRoute: typeof AuthArticlesSlugEditImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthSettingsRoute: typeof AuthSettingsRoute
  AuthArticlesCreateRoute: typeof AuthArticlesCreateRoute
  AuthArticlesSlugEditRoute: typeof AuthArticlesSlugEditRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSettingsRoute: AuthSettingsRoute,
  AuthArticlesCreateRoute: AuthArticlesCreateRoute,
  AuthArticlesSlugEditRoute: AuthArticlesSlugEditRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface HomeLayoutRouteChildren {
  HomeLayoutIndexRoute: typeof HomeLayoutIndexRoute
  HomeLayoutAuthYourFeedRoute: typeof HomeLayoutAuthYourFeedRoute
  HomeLayoutTagFeedTagRoute: typeof HomeLayoutTagFeedTagRoute
}

const HomeLayoutRouteChildren: HomeLayoutRouteChildren = {
  HomeLayoutIndexRoute: HomeLayoutIndexRoute,
  HomeLayoutAuthYourFeedRoute: HomeLayoutAuthYourFeedRoute,
  HomeLayoutTagFeedTagRoute: HomeLayoutTagFeedTagRoute,
}

const HomeLayoutRouteWithChildren = HomeLayoutRoute._addFileChildren(
  HomeLayoutRouteChildren,
)

interface ProfileUsernameRouteChildren {
  ProfileUsernameFavoritesRoute: typeof ProfileUsernameFavoritesRoute
}

const ProfileUsernameRouteChildren: ProfileUsernameRouteChildren = {
  ProfileUsernameFavoritesRoute: ProfileUsernameFavoritesRoute,
}

const ProfileUsernameRouteWithChildren = ProfileUsernameRoute._addFileChildren(
  ProfileUsernameRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof HomeLayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/settings': typeof AuthSettingsRoute
  '/articles/$slug': typeof ArticlesSlugRoute
  '/profile/$username': typeof ProfileUsernameRouteWithChildren
  '/': typeof HomeLayoutIndexRoute
  '/articles/create': typeof AuthArticlesCreateRoute
  '/your-feed': typeof HomeLayoutAuthYourFeedRoute
  '/tag-feed/$tag': typeof HomeLayoutTagFeedTagRoute
  '/profile/$username/favorites': typeof ProfileUsernameFavoritesRoute
  '/articles/$slug/edit': typeof AuthArticlesSlugEditRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/settings': typeof AuthSettingsRoute
  '/articles/$slug': typeof ArticlesSlugRoute
  '/profile/$username': typeof ProfileUsernameRouteWithChildren
  '/': typeof HomeLayoutIndexRoute
  '/articles/create': typeof AuthArticlesCreateRoute
  '/your-feed': typeof HomeLayoutAuthYourFeedRoute
  '/tag-feed/$tag': typeof HomeLayoutTagFeedTagRoute
  '/profile/$username/favorites': typeof ProfileUsernameFavoritesRoute
  '/articles/$slug/edit': typeof AuthArticlesSlugEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_homeLayout': typeof HomeLayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_auth/settings': typeof AuthSettingsRoute
  '/articles/$slug': typeof ArticlesSlugRoute
  '/profile/$username': typeof ProfileUsernameRouteWithChildren
  '/_homeLayout/': typeof HomeLayoutIndexRoute
  '/_auth/articles/create': typeof AuthArticlesCreateRoute
  '/_homeLayout/_auth/your-feed': typeof HomeLayoutAuthYourFeedRoute
  '/_homeLayout/tag-feed/$tag': typeof HomeLayoutTagFeedTagRoute
  '/profile/$username/favorites': typeof ProfileUsernameFavoritesRoute
  '/_auth/articles/$slug/edit': typeof AuthArticlesSlugEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/settings'
    | '/articles/$slug'
    | '/profile/$username'
    | '/'
    | '/articles/create'
    | '/your-feed'
    | '/tag-feed/$tag'
    | '/profile/$username/favorites'
    | '/articles/$slug/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/register'
    | '/settings'
    | '/articles/$slug'
    | '/profile/$username'
    | '/'
    | '/articles/create'
    | '/your-feed'
    | '/tag-feed/$tag'
    | '/profile/$username/favorites'
    | '/articles/$slug/edit'
  id:
    | '__root__'
    | '/_auth'
    | '/_homeLayout'
    | '/login'
    | '/register'
    | '/_auth/settings'
    | '/articles/$slug'
    | '/profile/$username'
    | '/_homeLayout/'
    | '/_auth/articles/create'
    | '/_homeLayout/_auth/your-feed'
    | '/_homeLayout/tag-feed/$tag'
    | '/profile/$username/favorites'
    | '/_auth/articles/$slug/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  HomeLayoutRoute: typeof HomeLayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  ArticlesSlugRoute: typeof ArticlesSlugRoute
  ProfileUsernameRoute: typeof ProfileUsernameRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  HomeLayoutRoute: HomeLayoutRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  ArticlesSlugRoute: ArticlesSlugRoute,
  ProfileUsernameRoute: ProfileUsernameRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_homeLayout",
        "/login",
        "/register",
        "/articles/$slug",
        "/profile/$username"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/settings",
        "/_auth/articles/create",
        "/_auth/articles/$slug/edit"
      ]
    },
    "/_homeLayout": {
      "filePath": "_homeLayout.tsx",
      "children": [
        "/_homeLayout/",
        "/_homeLayout/_auth/your-feed",
        "/_homeLayout/tag-feed/$tag"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_auth/settings": {
      "filePath": "_auth/settings.tsx",
      "parent": "/_auth"
    },
    "/articles/$slug": {
      "filePath": "articles.$slug.tsx"
    },
    "/profile/$username": {
      "filePath": "profile.$username.tsx",
      "children": [
        "/profile/$username/favorites"
      ]
    },
    "/_homeLayout/": {
      "filePath": "_homeLayout/index.tsx",
      "parent": "/_homeLayout"
    },
    "/_auth/articles/create": {
      "filePath": "_auth/articles.create.tsx",
      "parent": "/_auth"
    },
    "/_homeLayout/_auth/your-feed": {
      "filePath": "_homeLayout._auth.your-feed.tsx",
      "parent": "/_homeLayout"
    },
    "/_homeLayout/tag-feed/$tag": {
      "filePath": "_homeLayout/tag-feed.$tag.tsx",
      "parent": "/_homeLayout"
    },
    "/profile/$username/favorites": {
      "filePath": "profile.$username.favorites.tsx",
      "parent": "/profile/$username"
    },
    "/_auth/articles/$slug/edit": {
      "filePath": "_auth/articles.$slug.edit.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
