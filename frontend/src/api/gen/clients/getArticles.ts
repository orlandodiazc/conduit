/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '../../client.ts'
import type { RequestConfig, ResponseErrorConfig } from '../../client.ts'
import type {
  GetArticles401,
  GetArticles422,
  GetArticlesQueryParams,
  GetArticlesQueryResponse,
} from '../types/GetArticles.ts'

function getGetArticlesUrl() {
  return `http://localhost:8080/articles` as const
}

/**
 * @description Get most recent articles globally. Use query parameters to filter results. Auth is optional
 * @summary Get recent articles globally
 * {@link /articles}
 */
export async function getArticles(
  params?: GetArticlesQueryParams,
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    GetArticlesQueryResponse,
    ResponseErrorConfig<GetArticles401 | GetArticles422>,
    unknown
  >({
    method: 'GET',
    url: getGetArticlesUrl().toString(),
    params,
    ...requestConfig,
  })
  return res.data
}
