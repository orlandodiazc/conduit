/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '../../client.ts'
import type { RequestConfig, ResponseErrorConfig } from '../../client.ts'
import type {
  CreateCommentMutationRequest,
  CreateCommentMutationResponse,
  CreateCommentPathParams,
  CreateComment400,
  CreateComment404,
} from '../types/CreateComment.ts'

function getCreateCommentUrl(articleId: CreateCommentPathParams['articleId']) {
  return `http://localhost:8080/articles/${articleId}/comments` as const
}

/**
 * {@link /articles/:articleId/comments}
 */
export async function createComment(
  articleId: CreateCommentPathParams['articleId'],
  data: CreateCommentMutationRequest,
  config: Partial<RequestConfig<CreateCommentMutationRequest>> & {
    client?: typeof client
  } = {},
) {
  const { client: request = client, ...requestConfig } = config

  const res = await request<
    CreateCommentMutationResponse,
    ResponseErrorConfig<CreateComment400 | CreateComment404>,
    CreateCommentMutationRequest
  >({
    method: 'POST',
    url: getCreateCommentUrl(articleId).toString(),
    data,
    ...requestConfig,
  })
  return res.data
}
