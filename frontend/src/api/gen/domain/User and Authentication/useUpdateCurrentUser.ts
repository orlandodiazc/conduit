/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { useMutation } from '@tanstack/react-query'
import { updateCurrentUser } from '../../clients/updateCurrentUser.ts'
import type client from '@kubb/plugin-client/clients/axios'
import type {
  UpdateCurrentUser401,
  UpdateCurrentUser422,
  UpdateCurrentUserMutationRequest,
  UpdateCurrentUserMutationResponse,
} from '../../types/UpdateCurrentUser.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'
import type { QueryClient, UseMutationOptions } from '@tanstack/react-query'

export const updateCurrentUserMutationKey = () => [{ url: '/user' }] as const

export type UpdateCurrentUserMutationKey = ReturnType<
  typeof updateCurrentUserMutationKey
>

/**
 * @description Updated user information for current user
 * @summary Update current user
 * {@link /user}
 */
export function useUpdateCurrentUser<TContext>(
  options: {
    mutation?: UseMutationOptions<
      UpdateCurrentUserMutationResponse,
      ResponseErrorConfig<UpdateCurrentUser401 | UpdateCurrentUser422>,
      { data: UpdateCurrentUserMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<UpdateCurrentUserMutationRequest>> & {
      client?: typeof client
    }
  } = {},
) {
  const {
    mutation: { client: queryClient, ...mutationOptions } = {},
    client: config = {},
  } = options ?? {}
  const mutationKey =
    mutationOptions.mutationKey ?? updateCurrentUserMutationKey()

  return useMutation<
    UpdateCurrentUserMutationResponse,
    ResponseErrorConfig<UpdateCurrentUser401 | UpdateCurrentUser422>,
    { data: UpdateCurrentUserMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return updateCurrentUser(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
