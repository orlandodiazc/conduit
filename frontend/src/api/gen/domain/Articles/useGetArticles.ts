/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { queryOptions } from '@tanstack/react-query'
import { getArticles } from '../../clients/getArticles.ts'
import type client from '@kubb/plugin-client/clients/axios'
import type {
  GetArticles401,
  GetArticles422,
  GetArticlesQueryParams,
  GetArticlesQueryResponse,
} from '../../types/GetArticles.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'

export const getArticlesQueryKey = (params?: GetArticlesQueryParams) =>
  [{ url: '/articles' }, ...(params ? [params] : [])] as const

export type GetArticlesQueryKey = ReturnType<typeof getArticlesQueryKey>

export function getArticlesQueryOptions(
  params?: GetArticlesQueryParams,
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getArticlesQueryKey(params)
  return queryOptions<
    GetArticlesQueryResponse,
    ResponseErrorConfig<GetArticles401 | GetArticles422>,
    GetArticlesQueryResponse,
    typeof queryKey
  >({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getArticles(params, config)
    },
  })
}
