/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { queryOptions } from '@tanstack/react-query'
import { getProfileByUsername } from '../../clients/getProfileByUsername.ts'
import type client from '@kubb/plugin-client/clients/axios'
import type {
  GetProfileByUsername401,
  GetProfileByUsername422,
  GetProfileByUsernamePathParams,
  GetProfileByUsernameQueryResponse,
} from '../../types/GetProfileByUsername.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'

export const getProfileByUsernameQueryKey = (
  username: GetProfileByUsernamePathParams['username'],
) => [{ url: '/profiles/:username', params: { username: username } }] as const

export type GetProfileByUsernameQueryKey = ReturnType<
  typeof getProfileByUsernameQueryKey
>

export function getProfileByUsernameQueryOptions(
  username: GetProfileByUsernamePathParams['username'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getProfileByUsernameQueryKey(username)
  return queryOptions<
    GetProfileByUsernameQueryResponse,
    ResponseErrorConfig<GetProfileByUsername401 | GetProfileByUsername422>,
    GetProfileByUsernameQueryResponse,
    typeof queryKey
  >({
    enabled: !!username,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getProfileByUsername(username, config)
    },
  })
}
