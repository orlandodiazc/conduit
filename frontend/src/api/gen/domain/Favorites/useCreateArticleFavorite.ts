/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { useMutation } from '@tanstack/react-query'
import { createArticleFavorite } from '../../clients/createArticleFavorite.ts'
import type client from '@kubb/plugin-client/clients/axios'
import type {
  CreateArticleFavorite401,
  CreateArticleFavorite422,
  CreateArticleFavoriteMutationResponse,
  CreateArticleFavoritePathParams,
} from '../../types/CreateArticleFavorite.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'
import type { QueryClient, UseMutationOptions } from '@tanstack/react-query'

export const createArticleFavoriteMutationKey = () =>
  [{ url: '/articles/{slug}/favorite' }] as const

export type CreateArticleFavoriteMutationKey = ReturnType<
  typeof createArticleFavoriteMutationKey
>

/**
 * @description Favorite an article. Auth is required
 * @summary Favorite an article
 * {@link /articles/:slug/favorite}
 */
export function useCreateArticleFavorite<TContext>(
  options: {
    mutation?: UseMutationOptions<
      CreateArticleFavoriteMutationResponse,
      ResponseErrorConfig<CreateArticleFavorite401 | CreateArticleFavorite422>,
      { slug: CreateArticleFavoritePathParams['slug'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const {
    mutation: { client: queryClient, ...mutationOptions } = {},
    client: config = {},
  } = options ?? {}
  const mutationKey =
    mutationOptions.mutationKey ?? createArticleFavoriteMutationKey()

  return useMutation<
    CreateArticleFavoriteMutationResponse,
    ResponseErrorConfig<CreateArticleFavorite401 | CreateArticleFavorite422>,
    { slug: CreateArticleFavoritePathParams['slug'] },
    TContext
  >(
    {
      mutationFn: async ({ slug }) => {
        return createArticleFavorite(slug, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
