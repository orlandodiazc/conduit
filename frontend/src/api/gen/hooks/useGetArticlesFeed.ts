/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { queryOptions } from '@tanstack/react-query'
import { getArticlesFeed } from '../clients/getArticlesFeed.ts'
import type client from '@kubb/plugin-client/clients/axios'
import type {
  GetArticlesFeed401,
  GetArticlesFeed422,
  GetArticlesFeedQueryParams,
  GetArticlesFeedQueryResponse,
} from '../types/GetArticlesFeed.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'

export const getArticlesFeedQueryKey = (params?: GetArticlesFeedQueryParams) =>
  [{ url: '/articles/feed' }, ...(params ? [params] : [])] as const

export type GetArticlesFeedQueryKey = ReturnType<typeof getArticlesFeedQueryKey>

export function getArticlesFeedQueryOptions(
  params?: GetArticlesFeedQueryParams,
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getArticlesFeedQueryKey(params)
  return queryOptions<
    GetArticlesFeedQueryResponse,
    ResponseErrorConfig<GetArticlesFeed401 | GetArticlesFeed422>,
    GetArticlesFeedQueryResponse,
    typeof queryKey
  >({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getArticlesFeed(params, config)
    },
  })
}
