/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { queryOptions } from '@tanstack/react-query'
import { getProfile } from '../clients/getProfile.ts'
import type client from '@kubb/plugin-client/clients/axios'
import type {
  GetProfile400,
  GetProfile404,
  GetProfilePathParams,
  GetProfileQueryResponse,
} from '../types/GetProfile.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'

export const getProfileQueryKey = (
  username: GetProfilePathParams['username'],
) => [{ url: '/profiles/:username', params: { username: username } }] as const

export type GetProfileQueryKey = ReturnType<typeof getProfileQueryKey>

export function getProfileQueryOptions(
  username: GetProfilePathParams['username'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getProfileQueryKey(username)
  return queryOptions<
    GetProfileQueryResponse,
    ResponseErrorConfig<GetProfile400 | GetProfile404>,
    GetProfileQueryResponse,
    typeof queryKey
  >({
    enabled: !!username,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getProfile(username, config)
    },
  })
}
