/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { queryOptions } from '@tanstack/react-query'
import { getArticle } from '../clients/getArticle.ts'
import type client from '@kubb/plugin-client/clients/axios'
import type {
  GetArticle400,
  GetArticle404,
  GetArticlePathParams,
  GetArticleQueryResponse,
} from '../types/GetArticle.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'

export const getArticleQueryKey = (id: GetArticlePathParams['id']) =>
  [{ url: '/articles/:id', params: { id: id } }] as const

export type GetArticleQueryKey = ReturnType<typeof getArticleQueryKey>

export function getArticleQueryOptions(
  id: GetArticlePathParams['id'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getArticleQueryKey(id)
  return queryOptions<
    GetArticleQueryResponse,
    ResponseErrorConfig<GetArticle400 | GetArticle404>,
    GetArticleQueryResponse,
    typeof queryKey
  >({
    enabled: !!id,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getArticle(id, config)
    },
  })
}
