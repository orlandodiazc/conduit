/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  DeleteArticleFavoriteMutationResponse,
  DeleteArticleFavoritePathParams,
  DeleteArticleFavorite400,
  DeleteArticleFavorite404,
} from '../types/DeleteArticleFavorite.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { deleteArticleFavorite } from '../clients/deleteArticleFavorite.ts'
import { useMutation } from '@tanstack/react-query'

export const deleteArticleFavoriteMutationKey = () =>
  [{ url: '/articles/{id}/favorite' }] as const

export type DeleteArticleFavoriteMutationKey = ReturnType<
  typeof deleteArticleFavoriteMutationKey
>

/**
 * {@link /articles/:id/favorite}
 */
export function useDeleteArticleFavorite<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteArticleFavoriteMutationResponse,
      ResponseErrorConfig<DeleteArticleFavorite400 | DeleteArticleFavorite404>,
      { id: DeleteArticleFavoritePathParams['id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const {
    mutation: { client: queryClient, ...mutationOptions } = {},
    client: config = {},
  } = options ?? {}
  const mutationKey =
    mutationOptions?.mutationKey ?? deleteArticleFavoriteMutationKey()

  return useMutation<
    DeleteArticleFavoriteMutationResponse,
    ResponseErrorConfig<DeleteArticleFavorite400 | DeleteArticleFavorite404>,
    { id: DeleteArticleFavoritePathParams['id'] },
    TContext
  >(
    {
      mutationFn: async ({ id }) => {
        return deleteArticleFavorite(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
