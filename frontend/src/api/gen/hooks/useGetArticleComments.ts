/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { queryOptions } from '@tanstack/react-query'
import { getArticleComments } from '../clients/getArticleComments.ts'
import type client from '@kubb/plugin-client/clients/axios'
import type {
  GetArticleComments401,
  GetArticleComments422,
  GetArticleCommentsPathParams,
  GetArticleCommentsQueryResponse,
} from '../types/GetArticleComments.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'

export const getArticleCommentsQueryKey = (
  slug: GetArticleCommentsPathParams['slug'],
) => [{ url: '/articles/:slug/comments', params: { slug: slug } }] as const

export type GetArticleCommentsQueryKey = ReturnType<
  typeof getArticleCommentsQueryKey
>

export function getArticleCommentsQueryOptions(
  slug: GetArticleCommentsPathParams['slug'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getArticleCommentsQueryKey(slug)
  return queryOptions<
    GetArticleCommentsQueryResponse,
    ResponseErrorConfig<GetArticleComments401 | GetArticleComments422>,
    GetArticleCommentsQueryResponse,
    typeof queryKey
  >({
    enabled: !!slug,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getArticleComments(slug, config)
    },
  })
}
