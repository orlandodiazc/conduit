/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  DeleteUserFollowMutationResponse,
  DeleteUserFollowPathParams,
  DeleteUserFollow400,
  DeleteUserFollow404,
} from '../types/DeleteUserFollow.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { deleteUserFollow } from '../clients/deleteUserFollow.ts'
import { useMutation } from '@tanstack/react-query'

export const deleteUserFollowMutationKey = () =>
  [{ url: '/profiles/{username}/follow' }] as const

export type DeleteUserFollowMutationKey = ReturnType<
  typeof deleteUserFollowMutationKey
>

/**
 * {@link /profiles/:username/follow}
 */
export function useDeleteUserFollow<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteUserFollowMutationResponse,
      ResponseErrorConfig<DeleteUserFollow400 | DeleteUserFollow404>,
      { username: DeleteUserFollowPathParams['username'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof client }
  } = {},
) {
  const {
    mutation: { client: queryClient, ...mutationOptions } = {},
    client: config = {},
  } = options ?? {}
  const mutationKey =
    mutationOptions?.mutationKey ?? deleteUserFollowMutationKey()

  return useMutation<
    DeleteUserFollowMutationResponse,
    ResponseErrorConfig<DeleteUserFollow400 | DeleteUserFollow404>,
    { username: DeleteUserFollowPathParams['username'] },
    TContext
  >(
    {
      mutationFn: async ({ username }) => {
        return deleteUserFollow(username, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
