/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  GetCommentsQueryResponse,
  GetCommentsPathParams,
  GetComments400,
  GetComments404,
} from '../types/GetComments.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'
import { getComments } from '../clients/getComments.ts'
import { queryOptions } from '@tanstack/react-query'

export const getCommentsQueryKey = (
  articleId: GetCommentsPathParams['articleId'],
) =>
  [
    { url: '/articles/:articleId/comments', params: { articleId: articleId } },
  ] as const

export type GetCommentsQueryKey = ReturnType<typeof getCommentsQueryKey>

export function getCommentsQueryOptions(
  articleId: GetCommentsPathParams['articleId'],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = getCommentsQueryKey(articleId)
  return queryOptions<
    GetCommentsQueryResponse,
    ResponseErrorConfig<GetComments400 | GetComments404>,
    GetCommentsQueryResponse,
    typeof queryKey
  >({
    enabled: !!articleId,
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getComments(articleId, config)
    },
  })
}
