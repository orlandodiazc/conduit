/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import client from '@kubb/plugin-client/clients/axios'
import type {
  ListArticleFeedQueryResponse,
  ListArticleFeedQueryParams,
  ListArticleFeed400,
  ListArticleFeed404,
} from '../types/ListArticleFeed.ts'
import type {
  RequestConfig,
  ResponseErrorConfig,
} from '@kubb/plugin-client/clients/axios'
import { listArticleFeed } from '../clients/listArticleFeed.ts'
import { queryOptions } from '@tanstack/react-query'

export const listArticleFeedQueryKey = (params?: ListArticleFeedQueryParams) =>
  [{ url: '/articles/feed' }, ...(params ? [params] : [])] as const

export type ListArticleFeedQueryKey = ReturnType<typeof listArticleFeedQueryKey>

export function listArticleFeedQueryOptions(
  params?: ListArticleFeedQueryParams,
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const queryKey = listArticleFeedQueryKey(params)
  return queryOptions<
    ListArticleFeedQueryResponse,
    ResponseErrorConfig<ListArticleFeed400 | ListArticleFeed404>,
    ListArticleFeedQueryResponse,
    typeof queryKey
  >({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return listArticleFeed(params, config)
    },
  })
}
