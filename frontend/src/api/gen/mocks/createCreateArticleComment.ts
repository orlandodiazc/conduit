/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { faker } from '@faker-js/faker'
import { createCommentFakeData } from './createComment.ts'
import { createGenericErrorModelFakeData } from './createGenericErrorModel.ts'
import { createNewCommentFakeData } from './createNewComment.ts'
import type {
  CreateArticleComment200,
  CreateArticleCommentMutationRequest,
  CreateArticleCommentMutationResponse,
  CreateArticleCommentPathParams,
} from '../types/CreateArticleComment.ts'

export function createCreateArticleCommentPathParamsFakeData(
  data?: Partial<CreateArticleCommentPathParams>,
): CreateArticleCommentPathParams {
  return {
    ...{ slug: faker.string.alpha() },
    ...(data || {}),
  }
}

/**
 * @description Single comment
 */
export function createCreateArticleComment200FakeData(
  data?: Partial<CreateArticleComment200>,
): CreateArticleComment200 {
  return {
    ...{ comment: createCommentFakeData() },
    ...(data || {}),
  }
}

/**
 * @description Unauthorized
 */
export function createCreateArticleComment401FakeData() {
  return undefined
}

/**
 * @description Unexpected error
 */
export function createCreateArticleComment422FakeData() {
  return createGenericErrorModelFakeData()
}

/**
 * @description Comment you want to create
 */
export function createCreateArticleCommentMutationRequestFakeData(
  data?: Partial<CreateArticleCommentMutationRequest>,
): CreateArticleCommentMutationRequest {
  return {
    ...{ comment: createNewCommentFakeData() },
    ...(data || {}),
  }
}

export function createCreateArticleCommentMutationResponseFakeData(
  data?: Partial<CreateArticleCommentMutationResponse>,
): CreateArticleCommentMutationResponse {
  return (
    data ||
    faker.helpers.arrayElement<any>([createCreateArticleComment200FakeData()])
  )
}
